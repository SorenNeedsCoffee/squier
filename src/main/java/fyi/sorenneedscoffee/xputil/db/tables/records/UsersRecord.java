/*
 * This file is generated by jOOQ.
 */
package fyi.sorenneedscoffee.xputil.db.tables.records;


import fyi.sorenneedscoffee.xputil.db.tables.Users;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record3<String, Double, Integer> {

    private static final long serialVersionUID = -1760477790;

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(String id, Double xp, Integer lvl) {
        super(Users.USERS);

        set(0, id);
        set(1, xp);
        set(2, lvl);
    }

    /**
     * Getter for <code>s13_users.users.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>s13_users.users.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>s13_users.users.xp</code>.
     */
    public Double getXp() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>s13_users.users.xp</code>.
     */
    public void setXp(Double value) {
        set(1, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>s13_users.users.lvl</code>.
     */
    public Integer getLvl() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>s13_users.users.lvl</code>.
     */
    public void setLvl(Integer value) {
        set(2, value);
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row3<String, Double, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Double, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<Double> field2() {
        return Users.USERS.XP;
    }

    @Override
    public Field<Integer> field3() {
        return Users.USERS.LVL;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getXp();
    }

    @Override
    public Integer component3() {
        return getLvl();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getXp();
    }

    @Override
    public Integer value3() {
        return getLvl();
    }

    @Override
    public UsersRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(Double value) {
        setXp(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public UsersRecord value3(Integer value) {
        setLvl(value);
        return this;
    }

    @Override
    public UsersRecord values(String value1, Double value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }
}
